package com.linhan.bai.day06;

/*
 * 方法的重写
 * 子类继承父类后，可以对父类中的方法进行重写
 * 重写以后，当创建子类对象之后，通过子类调用父类中的同名同参数的方法时，实际执行的是子类重写父类的方法
 * 
 * 重写的规定:
 * 		方法的声明：权限修饰符，返回值类型，方法名（形参列表）throws 异常的类型{
 * 														//方法体
 * 													}
 * 									约定俗称：子类中叫重写的方法，父类中叫被重写的方法
 * ① 子类重写的方法的方法名和形参列表与父类被重写的方法的方法名和形参列表相同
 * ② 子类重写的方法的权限修饰符不小于父类被重写的方法的权限修饰符
 * 		>特殊情况：子类不能重写父类中声明是private的方法
 * ③ 返回值类型：
 * 		>父类中被重写的方法返回值类型为void，子类中重写的方法返回值类型也为void
 * 		>父类中被重写的方法的返回值类型为A类，子类中重写的方法的返回值类型可以为A类或者A类的子类
 * 		>父类被重写的方法的返回值类型是基本数据类型（比如double），则子类重写的方法的返回值类型必须是相同的数据类型（必须为double）
 * 		>子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型
 * 
 * 面试题：区分方法的重载和重写
 * *******************************************************************************************************************************
 * 子类和父类中同名和同参数的方法，要么都声明为非static(考虑重写)的，要么都声明为static(不是重写)的
 * 
 * 
 */

public class PersonTest {
	
	public static void main(String[] args) {
		
		Person person = new Person();
		person.eat();
		
		Student student = new Student("软件工程");
		student.eat();
		student.walk(5);
		student.study();
	}

}
